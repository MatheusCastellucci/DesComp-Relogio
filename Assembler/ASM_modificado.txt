NOP
STA @510                        # Reseta a entrada KEY1
STA @508                        # Reseta a entrada KEY0
STA @509                        # Reseta a entrada de Reset
LDI R0, $0                      # Inicializa R0 com 0
STA R0, @0                      # Armazena 0 no endereço 0 da RAM
LDI R0, $1                      # Define R0 com valor 1
STA R0, @1                      # Armazena o valor 1 no endereço 1 da RAM
LDI R0, $2                      # Define R0 com valor 2
STA R0, @2                      # Armazena o valor 2 no endereço 2 da RAM
LDI R0, $3                      # Define R0 com valor 3
STA R0, @3                      # Armazena o valor 3 no endereço 3 da RAM
LDI R0, $4                      # Define R0 com valor 4
STA R0, @4                      # Armazena o valor 4 no endereço 4 da RAM
LDI R0, $5                      # Define R0 com valor 5
STA R0, @5                      # Armazena o valor 5 no endereço 5 da RAM
LDI R0, $6                      # Define R0 com valor 6
STA R0, @6                      # Armazena o valor 6 no endereço 6 da RAM
LDI R0, $7                      # Define R0 com valor 7
STA R0, @7                      # Armazena o valor 7 no endereço 7 da RAM
LDI R0, $8                      # Define R0 com valor 8
STA R0, @8                      # Armazena o valor 8 no endereço 8 da RAM
LDI R0, $9                      # Define R0 com valor 9
STA R0, @9                      # Armazena o valor 9 no endereço 9 da RAM
LDI R0, $10                     # Define R0 com valor 10
STA R0, @10                     # Armazena o valor 10 no endereço 10 da RAM
LDI R0, $11                     # Define R0 com valor 11
STA R0, @11                     # Armazena o valor 11 no endereço 11 da RAM
LDI R0, $12                     # Define R0 com valor 12
STA R0, @12                     # Armazena o valor 12 no endereço 12 da RAM
LDI R0, $13                     # Define R0 com valor 13
STA R0, @13                     # Armazena o valor 13 no endereço 13 da RAM
LDI R0, $14                     # Define R0 com valor 14
STA R0, @14                     # Armazena o valor 14 no endereço 14 da RAM
LDI R0, $15                     # Define R0 com valor 15
STA R0, @15                     # Armazena o valor 15 no endereço 15 da RAM
LDA R0, @0                      # Carrega o valor do endereço 0 da RAM em R0
STA R0, @258                    # Desliga o LED 9
STA R0, @257                    # Desliga o LED 8
STA R0, @256                    # Desliga os LEDs de 7 a 0
STA R0, @288                    # Limpa o display HEX 0
STA R0, @289                    # Limpa o display HEX 1
STA R0, @290                    # Limpa o display HEX 2
STA R0, @291                    # Limpa o display HEX 3
STA R0, @292                    # Limpa o display HEX 4
STA R0, @293                    # Limpa o display HEX 5
STA R0, @16                     # Zera o endereço 16 da RAM (segundos unidades)
STA R0, @17                     # Zera o endereço 17 da RAM (segundos dezenas)
STA R0, @18                     # Zera o endereço 18 da RAM (minutos unidades)
STA R0, @19                     # Zera o endereço 19 da RAM (minutos dezenas)
STA R0, @20                     # Zera o endereço 20 da RAM (horas unidades)
STA R0, @21                     # Zera o endereço 21 da RAM (horas dezenas)
NOP
LDA R0, @353                    # Carrega o estado da entrada KEY1 em R0
CEQ R0, @0                      # Verifica se R0 é igual a 0
JEQ @57                         # Pula se for verdade
JSR @186                        # Executa sub-rotina se for falso
NOP
LDA R0, @357                    # Carrega o estado do CLOCK em R0
CEQ R0, @0                      # Verifica se R0 é igual a 0
JEQ @74                         # Pula se for verdade
JSR @79                         # Executa sub-rotina se for falso
LDA R0, @16                     # Carrega o valor do endereço 16 da RAM em R0
STA R0, @288                    # Atualiza o display HEX 0 com o valor de R0
LDA R0, @17                     # Carrega o valor do endereço 17 da RAM em R0
STA R0, @289                    # Atualiza o display HEX 1 com o valor de R0
LDA R0, @18                     # Carrega o valor do endereço 18 da RAM em R0
STA R0, @290                    # Atualiza o display HEX 2 com o valor de R0
LDA R0, @19                     # Carrega o valor do endereço 19 da RAM em R0
STA R0, @291                    # Atualiza o display HEX 3 com o valor de R0
LDA R0, @20                     # Carrega o valor do endereço 20 da RAM em R0
STA R0, @292                    # Atualiza o display HEX 4 com o valor de R0
LDA R0, @21                     # Carrega o valor do endereço 21 da RAM em R0
STA R0, @293                    # Atualiza o display HEX 5 com o valor de R0
NOP
LDA R0, @356                    # Carrega o estado do RESET em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @0                          # Pula se for verdade
JMP @52                         # Continua se for falso
NOP
STA R0, @508                    # Limpa a entrada do CLOCK em R0
NOP
LDA R1, @16                     # Carrega o valor do endereço 16 da RAM em R1
SOMA R1, @1                     # Incrementa R1 em 1
CEQ R1, @10                     # Verifica se R1 é igual a 10
JEQ @91                         # Pula se for verdade
STA R1, @16                     # Atualiza o endereço 16 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @216                        # Pula se for verdade
RET                             # Retorna se for falso
NOP
LDA R1, @0                      # Carrega o valor do endereço 0 da RAM em R1
STA R1, @16                     # Atualiza o endereço 16 da RAM com o valor de R1
LDA R1, @17                     # Carrega o valor do endereço 17 da RAM em R1
SOMA R1, @1                     # Incrementa R1 em 1
CEQ R1, @6                      # Verifica se R1 é igual a 6
JEQ @178                        # Pula se for verdade
STA R1, @17                     # Atualiza o endereço 17 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @216                        # Pula se for verdade
RET                             # Retorna se for falso
NOP
LDA R1, @18                     # Carrega o valor do endereço 18 da RAM em R1
SOMA R1, @1                     # Incrementa R1 em 1
CEQ R1, @10                     # Verifica se R1 é igual a 10
JEQ @113                        # Pula se for verdade
STA R1, @18                     # Atualiza o endereço 18 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @201                        # Pula se for verdade
RET                             # Retorna se for falso
NOP
LDA R1, @0                      # Carrega o valor do endereço 0 da RAM em R1
STA R1, @18                     # Atualiza o endereço 18 da RAM com o valor de R1
LDA R1, @19                     # Carrega o valor do endereço 19 da RAM em R1
SOMA R1, @1                     # Incrementa R1 em 1
CEQ R1, @6                      # Verifica se R1 é igual a 6
JEQ @170                        # Pula se for verdade
STA R1, @19                     # Atualiza o endereço 19 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @201                        # Pula se for verdade
RET                             # Retorna se for falso
NOP
LDA R1, @21                     # Carrega o valor do endereço 21 da RAM em R1
CEQ R1, @2                      # Verifica se R1 é igual a 2
JEQ @138                        # Pula se for verdade
LDA R1, @20                     # Carrega o valor do endereço 20 da RAM em R1
SOMA R1, @1                     # Incrementa R1 em 1
CEQ R1, @10                     # Verifica se R1 é igual a 10
JEQ @148                        # Pula se for verdade
STA R1, @20                     # Atualiza o endereço 20 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @186                        # Pula se for verdade
RET                             # Retorna se for falso
NOP
LDA R1, @20                     # Carrega o valor do endereço 20 da RAM em R1
SOMA R1, @1                     # Incrementa R1 em 1
CEQ R1, @4                      # Verifica se R1 é igual a 4
JEQ @158                        # Pula se for verdade
STA R1, @20                     # Atualiza o endereço 20 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @186                        # Pula se for verdade
RET                             # Retorna se for falso
NOP
LDA R1, @0                      # Carrega o valor do endereço 0 da RAM em R1
STA R1, @20                     # Atualiza o endereço 20 da RAM com o valor de R1
LDA R1, @21                     # Carrega o valor do endereço 21 da RAM em R1
SOMA R1, @1                     # Incrementa R1 em 1
STA R1, @21                     # Atualiza o endereço 21 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @186                        # Pula se for verdade
RET                             # Retorna se for falso
NOP
LDA R1, @0                      # Carrega o valor do endereço 0 da RAM em R1
STA R1, @21                     # Atualiza o endereço 21 da RAM com o valor de R1
STA R1, @20                     # Atualiza o endereço 20 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @186                        # Pula se for verdade
STA R1, @19                     # Atualiza o endereço 19 da RAM com o valor de R1
STA R1, @18                     # Atualiza o endereço 18 da RAM com o valor de R1
STA R1, @17                     # Atualiza o endereço 17 da RAM com o valor de R1
STA R1, @16                     # Atualiza o endereço 16 da RAM com o valor de R1
RET                             # Retorna
NOP
LDA R1, @0                      # Carrega o valor do endereço 0 da RAM em R1
STA R1, @19                     # Atualiza o endereço 19 da RAM com o valor de R1
STA R1, @18                     # Atualiza o endereço 18 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @201                        # Pula se for verdade
JMP @125                        # Continua se for falso
NOP
LDA R1, @0                      # Carrega o valor do endereço 0 da RAM em R1
STA R1, @17                     # Atualiza o endereço 17 da RAM com o valor de R1
STA R1, @16                     # Atualiza o endereço 16 da RAM com o valor de R1
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @216                        # Pula se for verdade
JMP @103                        # Continua se for falso
NOP
STA @510                        # Reseta a entrada KEY1
STA @511                        # Reseta a entrada KEY0
LDA R1, @20                     # Carrega o valor do endereço 20 da RAM em R1
STA R1, @292                    # Atualiza o display HEX 4 com o valor de R1
LDA R1, @21                     # Carrega o valor do endereço 21 da RAM em R1
STA R1, @293                    # Atualiza o display HEX 5 com o valor de R1
NOP
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @125                        # Pula se for verdade
LDA R0, @353                    # Carrega o estado da entrada KEY1 em R0
CEQ R0, @0                      # Verifica se R0 é igual a 0
JEQ @193                        # Pula se for verdade
STA @510                        # Reseta a entrada KEY1
NOP
STA @510                        # Reseta a entrada KEY1
STA @511                        # Reseta a entrada KEY0
LDA R1, @18                     # Carrega o valor do endereço 18 da RAM em R1
STA R1, @290                    # Atualiza o display HEX 2 com o valor de R1
LDA R1, @19                     # Carrega o valor do endereço 19 da RAM em R1
STA R1, @291                    # Atualiza o display HEX 3 com o valor de R1
NOP
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @103                        # Pula se for verdade
LDA R0, @353                    # Carrega o estado da entrada KEY1 em R0
CEQ R0, @0                      # Verifica se R0 é igual a 0
JEQ @208                        # Pula se for verdade
STA @510                        # Reseta a entrada KEY1
NOP
STA @510                        # Reseta a entrada KEY1
STA @511                        # Reseta a entrada KEY0
LDA R1, @16                     # Carrega o valor do endereço 16 da RAM em R1
STA R1, @288                    # Atualiza o display HEX 0 com o valor de R1
LDA R1, @17                     # Carrega o valor do endereço 17 da RAM em R1
STA R1, @289                    # Atualiza o display HEX 1 com o valor de R1
NOP
LDA R0, @352                    # Carrega o estado da entrada KEY0 em R0
CEQ R0, @1                      # Verifica se R0 é igual a 1
JEQ @81                         # Pula se for verdade
LDA R0, @353                    # Carrega o estado da entrada KEY1 em R0
CEQ R0, @0                      # Verifica se R0 é igual a 0
JEQ @223                        # Pula se for verdade
STA @510                        # Reseta a entrada KEY1
RET                             # Retorna
